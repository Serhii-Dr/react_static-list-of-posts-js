{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","CommentList","comments","map","eachComment","id","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"018IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mCACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,UCLCC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,mCACE,sBAAKL,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCK,EAAQF,OAE9C,OAED,mBAAGH,UAAU,qBAAqBC,KAAI,iBAAYI,EAAQH,OAA1D,SACGG,EAAQH,WAIb,qBAAKF,UAAU,oBAAf,SAAoCK,EAAQC,cCTrCC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACE,qBAAKR,UAAU,cAAf,SACGQ,EAASC,KAAI,SAAAC,GAAW,OACvB,cAAC,EAAD,CAAaL,QAASK,GAAkBA,EAAYC,YCH/CC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mCACE,sBAAKb,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,EAAKC,QAEtC,8BACG,eAED,cAAC,EAAD,CAAUf,KAAMc,EAAKd,aAIzB,mBAAGC,UAAU,iBAAb,SAA+Ba,EAAKP,OAEpC,uBAE0B,IAAzBO,EAAKL,SAASO,OACb,mBAAG,UAAQ,oBAAX,6BAEA,cAAC,EAAD,CAAaP,SAAUK,EAAKL,iBCvBvBQ,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,mCACE,qBAAKjB,UAAU,WAAf,SACGiB,EAAMR,KAAI,SAAAI,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,YCYlD,IAAMM,EAAQC,EAAgBT,KAAI,SAAAI,GAAI,kCACxCA,GADwC,IAE3Cd,MAXmBoB,EAWDN,EAAKM,OAVhBC,EAAgBC,MAAK,SAAAtB,GAAI,OAAIA,EAAKY,KAAOQ,MACzC,MAUPX,UAPsBG,EAOGE,EAAKF,GANvBW,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQmB,SAAWb,QADjE,IAAwBA,EALHQ,KAeRM,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUiB,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aab9376f.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <>\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </>\n);\n","export const CommentInfo = ({ comment }) => (\n  <>\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n        {' by '}\n\n        <a className=\"CommentInfo__email\" href={`mailto:${comment.email}`}>\n          {comment.email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">{comment.body}</div>\n    </div>\n  </>\n);\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <div className=\"CommentList\">\n      {comments.map(eachComment => (\n        <CommentInfo comment={eachComment} key={eachComment.id} />\n      ))}\n    </div>\n  </>\n);\n","import './PostInfo.scss';\n\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => (\n  <>\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={post.user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">{post.body}</p>\n\n      <hr />\n\n      {post.comments.length === 0 ? (\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      ) : (\n        <CommentList comments={post.comments} />\n      )}\n    </div>\n  </>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <>\n    <div className=\"PostList\">\n      {posts.map(post => <PostInfo post={post} key={post.id} />)}\n    </div>\n  </>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentById(id) {\n  return commentsFromServer.filter(comment => comment.postId === id);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}